{"version":3,"sources":["menu/index.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["tamakeikMenu","sectionChange","MenuBar","state","selected","select","event","preventDefault","val","currentTarget","value","document","documentElement","style","setProperty","setState","className","this","map","t","i","onClick","React","Component","App","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kRAYMA,EACN,CACI,UACA,WACA,UACA,aACA,eAOAC,GAAwB,EAyCbC,E,4MArCXC,MAAc,CACVC,SAAS,W,EAGLC,OAAS,SAACC,GACdA,EAAMC,iBACN,IAAIC,EAAMF,EAAMG,cAAcC,MAC9BT,GAAiBA,EACjBU,SAASC,gBAAgBC,MAAMC,YAAY,uBAAwBb,EAAc,cAAc,gBAC/F,EAAKc,SAAS,CAACX,SAASI,K,4CAG5B,WAAS,IAAD,OACJ,OACI,sBAAMQ,UAAY,sBAAlB,UAEI,qBAAKA,UAAY,gBAAjB,SAAmCC,KAAKd,MAAMC,WAE9C,qBAAKY,UAAY,iBAAjB,SACI,qBAAKA,UAAY,OAAjB,SACShB,EAAakB,KAAI,SAACC,EAASC,GAAV,OACd,wBACIV,MAASS,EAETH,UAAa,EAAKb,MAAMC,WAAae,EAAE,qBAAqB,YAAaE,QAAW,EAAKhB,OAH7F,SAKKc,GAHMC,iB,GAzBrBE,IAAMC,W,MCPbC,MAjBf,WACE,OACE,sBAAKR,UAAU,YAAf,UAEE,sBAAKA,UAAY,SAAjB,UACE,qBAAKA,UAAY,iBAAjB,SACE,qBAAKA,UAAY,OAAOS,IAAM,oBAAoBC,IAAM,uBAE1D,sBAAMV,UAAY,QAAlB,uBAEF,qBAAKA,UAAY,oBAAjB,SACE,cAAC,EAAD,UCFOW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAAS4B,eAAe,SAM1BZ,M","file":"static/js/main.e1669d3f.chunk.js","sourcesContent":["import { setPriority } from \"os\";\nimport React  from \"react\";\nimport \"./style.css\"\n\n\ninterface tamakeikItem {\n    price:number,\n    name:string,\n    description:string,\n    type:string,\n}\n\nconst tamakeikMenu : string[] = \n[\n    \"Tamales\",\n    \"TamaKeik\",\n    \"Lonches\",\n    \"Capirotada\",\n    \"Champurrado\",\n]\n\ninterface Props {\n    selected:string;\n}\n\nlet sectionChange:boolean = false;\n\nclass MenuBar extends React.Component {\n\n    state:Props = {\n        selected:\"Tamales\"\n    }\n\n    private select = (event:React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n        let val = event.currentTarget.value;\n        sectionChange = !sectionChange;\n        document.documentElement.style.setProperty(\"--change-item-action\" ,sectionChange?\"change-item\":\"change-item2\");\n        this.setState({selected:val})\n    }\n\n    render(){\n        return(\n            <div  className = \"principal-container\">\n                \n                <div className = \"selected-item\" >{this.state.selected}</div>\n\n                <div className = \"list-container\">\n                    <nav className = \"list\">\n                            {tamakeikMenu.map((t:string,i:number)=>\n                                <button \n                                    value = {t} \n                                    key = {i} \n                                    className = {this.state.selected === t?\"selected-list-item\":\"list-item\"} onClick = {this.select}\n                                    >\n                                    {t}\n                                </button>)}\n                    </nav>\n                </div>\n\n               \n\n            </div>\n        )\n    }\n}\nexport default MenuBar;","import MenuBar from \"./menu/index\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n\n      <div className = \"header\">\n        <div className = \"logo-container\">\n          <img className = \"logo\" src = \"TamaKeik-logo.png\" alt = \"Logo TamaKÃ¨ik\"/>\n        </div>\n        <text className = \"title\"> Menu </text>\n      </div>\n      <div className = \"content-container\">\n        <MenuBar/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}